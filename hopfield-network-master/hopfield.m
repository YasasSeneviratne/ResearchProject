%{ Author: Alex Bod
 % Website: http://www.alexbod.com
 % Details: http://www.alexbod.com/hopfield-network/
 % License: The GNU General Public License, version 2
 % hopfield.m: Hopfield network in Matlab
 %}

% Input data for learning
x = ['    OO    ';  ...
     '    OO    ';  ...
     '   OOOO   ';  ...
     '   O  O   ';  ...
     '  OO  OO  ';  ...
     '  O    O  ';  ...
     ' OOOOOOOO ';  ...
     ' OOOOOOOO ';  ...
     'OO      OO';  ...
     'OO      OO'];

x(:, :, 2) =        ...  
    ['OOOOOO    ';  ...
     'OOOOOOO   ';  ...
     'OO   OO   ';  ...
     'OOOOOOO   ';  ...
     'OOOOOOO   ';  ...
     'OO   OOO  ';  ...
     'OO    OO  ';  ...
     'OO   OOO  ';  ...
     'OOOOOOO   ';  ...
     'OOOOOO    '];

x(:, :, 3) =        ...
    ['OOOOOOOOOO';  ...
     'OOOOOOOOOO';  ...
     'OO      OO';  ...
     'OO        ';  ...
     'OO        ';  ...
     'OO        ';  ...
     'OO        ';  ...
     'OO      OO';  ...
     'OOOOOOOOOO';  ...
     'OOOOOOOOOO'];

x(:, :, 4) =        ...
    ['OO      OO';  ...
     'OO      OO';  ...
     'OO      OO';  ...
     'OO      OO';  ...
     'OOOOOOOOOO';  ...
     'OOOOOOOOOO';  ...
     'OO      OO';  ...
     'OO      OO';  ...
     'OO      OO';  ...
     'OO      OO'];

% Input data for recognition
y = ['    OO    ';  ...
     '    OO    ';  ...
     '   OOOO   ';  ...
     '   O  OO  ';  ...
     '  OO  OOO ';  ...
     '  O    OO ';  ...
     ' OOOOOOOO ';  ...
     ' OOOOOOOO ';  ...
     'OO      OO';  ...
     'OO      OO'];

y(:, :, 2) =        ...
    ['OOOOOOO   ';   ...
     'OOOOOOOOO ';   ...
     'OO   OOOO ';  ...
     'OOOOOOOOO ';   ...
     'OOOOOOO   ';  ...
     'OO   OOO  ';  ...
     'OO    OO  ';  ...
     'OO   OOO  ';  ...
     'OOOOOOO   ';  ...
     'OOOOOOOO  '];

y(:, :, 3) =        ...
    ['OOOOOOOOOO';  ...
     'OOOOOOOOOO';  ...
     'OO      OO';  ...
     'OO        ';  ...
     'OOOOOO    ';  ...
     'OO    OOO ';  ...
     'OO        ';  ...
     'OO      OO';  ...
     'OOOOOOOOOO';  ...
     'OOOOOOOOOO'];

y(:, :, 4) =        ...
    ['OO      OO';  ...
     'OO      OO';  ...
     'OO OOOO OO';  ...
     'OO      OO';  ...
     'OOOOOOOOOO';  ...
     'OOOOOOOOOO';  ...
     'OO      OO';  ...
     'OO OOOO OO';  ...
     'OO      OO';  ...
     'OO      OO'];

% Input data for learning
input = zeros(size(x,3),100);

% Input data for recognition
notcorrect = zeros(size(y,3),100);

% Make x input data binary
for n = 1:1:size(x,3)
    for i = 1:1:10
        for j = 1:1:10
            if x(i,j,n) == 'O'
                input(n,(i-1)*10+j) = 1; 
            else 
                input(n,(i-1)*10+j) = -1;
            end
        end
    end
end

% Make y input data binary
for n = 1:1:size(y,3)
    for i = 1:1:10
        for j = 1:1:10
            if y(i,j,n) == 'O'
                notcorrect(n,(i-1)*10+j) = 1; 
            else 
                notcorrect(n,(i-1)*10+j) = -1;
            end
        end
    end
end

% Initialize weight matrix
W = zeros(size(x,1),size(x,2));

% Calculate weight matrix = learning
for i = 1:1:size(x,1)*size(x,2)
    for j = 1:1:100
        weight = 0;
        if (i ~= j)
            for n = 1:1:size(x,3)
                weight = input(n,i) .* input(n,j) + weight;                
            end
        end
        W(i,j) = weight;
    end
end


for i = 1:1:100
    if (rem(i-1, 10) == 0) && (i ~= 1)
         fprintf('\n');
    end
    if notcorrect(1,i) == 1
         fprintf('O');
    elseif notcorrect(1,i) == -1
         fprintf(' ');
    else
         fprintf('!');
    end
end
%Recognition new
flag = true;
k = notcorrect(1,:);
while flag
    m = notcorrect(1,:)*W;
    for n=1:1:100
        if(m(n)>0)
            notcorrect(1,n)=1;
        else
            notcorrect(1,n)=-1;
        end
    end
    if(k==notcorrect(1,:))
        flag=false; 
    end
    k=notcorrect(1,:);
end

for i = 1:1:100
    if (rem(i-1, 10) == 0) && (i ~= 1)
         fprintf('\n');
    end
    if notcorrect(1,i) == 1
         fprintf('O');
    elseif notcorrect(1,i) == -1
         fprintf(' ');
    else
         fprintf('!');
    end
end